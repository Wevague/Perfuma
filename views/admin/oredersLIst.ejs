

   <%- include("../../views/partials/admin/header") %>

<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .content-header {
            margin-bottom: 20px;
        }
        .card-header {
            margin-bottom: 20px;
        }
        .input-group {
            max-width: 500px;
            margin: 0 auto;
            position: relative;
        }
        .input-group .search-icon {
            position: absolute;
            left: 10px;
            top: 50%;
            transform: translateY(-50%);
            color: #6c757d;
        }
        .input-group input {
            padding-left: 35px;
        }
        .table {
            width: 100%;
            border-collapse: collapse;
        }
        .table th, .table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        .table th {
            background-color: #f2f2f2;
            font-weight: bold;
        }
        .btn {
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .btn-info {
            background-color: #17a2b8;
            color: white;
        }
        .btn-danger {
            background-color: #dc3545;
            color: white;
        }
        .btn-success {
            background-color: #28a745;
            color: white;
        }
        .status-select {
            width: 100%;
            padding: 5px;
        }
        .pagination-container {
            margin-top: 20px;
            text-align: center;
        }
        .pagination-container a, .pagination-container span {
            padding: 5px 10px;
            margin: 0 5px;
            border: 1px solid #ddd;
            color: #333;
            text-decoration: none;
        }
        .current-page {
            background-color: #007bff;
            color: white;
        }
        .badge {
            display: inline-block;
            padding: 0.25em 0.4em;
            font-size: 75%;
            font-weight: 700;
            line-height: 1;
            text-align: center;
            white-space: nowrap;
            vertical-align: baseline;
            border-radius: 0.25rem;
            color: #fff;
            background-color: #6c757d;
            margin-right: 5px;
            margin-bottom: 5px;
        }
        .badge-outline {
            color: #6c757d;
            background-color: transparent;
            border: 1px solid #6c757d;
        }
        @media (max-width: 768px) {
            .table, .table tbody, .table tr, .table td {
                display: block;
            }
            .table tr {
                margin-bottom: 15px;
            }
            .table td {
                border: none;
                position: relative;
                padding-left: 50%;
            }
            .table td:before {
                content: attr(data-label);
                position: absolute;
                left: 6px;
                width: 45%;
                padding-right: 10px;
                white-space: nowrap;
                font-weight: bold;
            }
        }
        .swal-wide {
            width: 80% !important;
            max-width: 600px;
        }

        .table th, .table td {
    padding: 12px 20px;  /* Adjust padding inside cells */
    text-align: left;
    border-bottom: 1px solid #ddd;  /* Line at the bottom of each row */
    border-right: 2px solid #ddd;  /* Line between columns */
}

.table th:last-child, .table td:last-child {
    border-right: none;  /* Removes right border for the last column */
}

/* Adjust pagination styles */
.pagination {
    margin-top: 20px;
    text-align: center;
}

.pagination .page-item {
    margin: 0 5px; /* Space between pagination buttons */
}

.pagination .page-item.active .page-link {
    background-color: #007bff;
    border-color: #007bff;
    color: white;
}

.pagination .page-link {
    border: 1px solid #ddd;
    padding: 5px 10px;
    color: #333;
    text-decoration: none;
}

.pagination .page-link:hover {
    background-color: #007bff;
    color: white;
}

.ordered-item {
    margin-bottom: 15px;  /* Add space between each item */
    padding: 10px;
    background-color: #f9f9f9; /* Light gray background */
    border-radius: 5px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

/* Header for the ordered item (product name) */
.ordered-item-header {
    margin-bottom: 5px;  /* Space below the product name */
    font-size: 1.1em;  /* Slightly larger text */
    font-weight: bold;
    color: #333;  /* Darker text for emphasis */
}

/* Details (quantity and price) of the ordered item */
.ordered-item-details {
    font-size: 0.9em;  /* Smaller font size */
    color: #555;  /* Lighter color for details */
    display: flex;
    justify-content: space-between; /* Align quantity and price on opposite sides */
    margin-top: 5px;  /* Space between name and details */
}

/* Style the quantity */
.item-quantity {
    font-weight: 600;  /* Bold for emphasis */
    color: #007bff;  /* Blue color for quantity */
}

/* Style the price */
.item-price {
    font-weight: 600;  /* Bold for emphasis */
    color: #28a745;  /* Green color for price */
}

/* Hover effect for the ordered item container */
.ordered-item:hover {
    background-color: #e2e6ea; /* Slightly darker on hover */
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); /* Enhance shadow on hover */
}
.pagination-container {
    margin-top: 20px;
    text-align: center;
}

.pagination-container a, .pagination-container span {
    padding: 5px 10px;
    margin: 0 5px;
    border: 1px solid #ddd;
    color: #333;
    text-decoration: none;
}

.pagination-container .current-page {
    background-color: #007bff;
    color: white;
}

.pagination-container a:hover {
    background-color: #007bff;
    color: white;
}

.pagination-container a {
    display: inline-block;
    padding: 5px 10px;
}

.pagination-container span {
    display: inline-block;
    padding: 5px 10px;
}
    </style>
</head>

<div class="content-header">
    <div>
        <h2 class="content-title card-title">Orders</h2>
    </div>
</div>

<header class="card-header text-center mb-20">
    <form action="" method="get" class="d-inline">
        <div class="input-group input-group-sm border border-1 border-grey rounded-pill">
            <span class="search-icon">&#128269;</span>
            <input type="text" class="form-control border-0 rounded-pill" placeholder="Search orders" name="search">
            <button class="btn border-0" type="submit">Search</button>
        </div>
    </form>
</header>

<div class="right mt-5">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Order ID</th>
                <th>Customer Name</th>
                <th>Order Date</th>
                <th>Total Amount</th>
                <th>Items & Stocks</th> 
                <th>Status</th>
                <th>Actions</th>
                <th>view</th>
            </tr>
        </thead>
        <tbody>
            <% orders.forEach(order => { %>
                <tr>
                    <td data-label="Order ID"><%= order._id %></td>
                    <td data-label="Customer Name"><%= order.user ? order.user.name : 'User not found' %></td>
                    <td data-label="Order Date"><%= new Date(order.createdOn).toLocaleDateString() %></td>
                    <td data-label="Total Amount">$<%= order.totalPrice.toFixed(2) %></td>                
                    <td data-label="Items & Stocks">
                        <% order.orderedItems.forEach(item => { %>
                            <div class="ordered-item">
                                <div class="ordered-item-header">
                                    <strong class="item-name"><%= item.product.name %></strong>
                                </div>
                                <div class="ordered-item-details">
                                    <span class="item-quantity">Qty: <%= item.quantity %></span>
                                    <span class="item-quantity">ML: <%= item.volume %></span>
                                    

                                    <span class="item-price">Price: $<%= (item.price * item.quantity).toFixed(2) %></span>
                                </div>
                            </div>
                        <% }) %>
                    </td>
                    
                    

                    <td data-label="Status">
                        <% order.orderedItems.forEach(item => { %>
                            <select id="order-status-<%= order._id %>-<%= item.product._id %>" class="status-select"
                                <% if (item.orderStatus === 'Delivered' || order.status === 'Delivered') { %> disabled <% } %> 
                                onchange="changeOrderStatus('<%= order._id %>', this.value, '<%= item.product._id %>')">
                               
                                <option value="Pending" <%= item.orderStatus === 'Pending' ? 'selected' : '' %>
                                    <% if (item.orderStatus === 'confirmed'||item.orderStatus === 'Shipped'||item.orderStatus === 'Canceled') { %> disabled <% } %>>Pending</option>
                    
                                <option value="confirmed" <%= item.orderStatus === 'confirmed' ? 'selected' : '' %>
                                    <% if (item.orderStatus === 'Shipped'||item.orderStatus === 'Canceled') { %> disabled <% } %>
                                    
                                    >Confirmed</option>
                               
                                <option value="Shipped" <%= item.orderStatus === 'Shipped' ? 'selected' : '' %>
                                    <% if (item.orderStatus === 'Canceled') { %> disabled <% } %>
                                    >Shipped</option>
                                <option value="Canceled" <%= item.orderStatus === 'Canceled' ? 'selected' : '' %>>Canceled</option>
                                <option value="Delivered" <%= item.orderStatus === 'Delivered' ? 'selected' : '' %>
                                    <% if (item.orderStatus === 'Canceled') { %> disabled <% } %>
                                    >Delivered</option>
                            </select>
                        <% }); %>
                    </td>
                    
                    <td data-label="Actions">
                        <% let canCancel = true; %>
                        <% order.orderedItems.forEach(item => { %>
                            <% if (item.orderStatus === 'Delivered'||item.orderStatus === 'Canceled') { %>
                                <% canCancel = false; %> 
                            <% } %>
                        <% }); %>
                        
                        <% if (canCancel) { %>  
                            <button class="btn btn-danger" onclick="cancelOrder('<%= order._id %>')">Cancel Order</button>
                        <% } %>
                    </td>

                    <td>
                     <a href="/admin/order?orderId=<%= order._id %>" class="btn btn-danger">View Order</a>
                     </td>
                </tr>


                
                
            <% }); %>
        </tbody>
    </table>
</div>

<!-- <div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">

    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="orderDetailsModalLabel">Order Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <% orders.forEach(order => { %>
                <table class="table">
                    <% order.orderedItems.forEach(item => { %>

                    <tr>
                    
                        <th>Product Name</th>
                        <td> <%= item.product.productName%></td>
                    </tr>
                    <% }); %>
                   
                    <tr>
                        <th>Address</th>
                        <td><%= order.address.phone%>
                            <br>
                            <%= order.address.pincode%>
                            <br>
                            <%= order.address.state%>
                            <br>
                            <%= order.address.
                            city
                            %>
                            <br>
                            <%= order.address.addressLine1
                            %>
                        </td>
                    </tr>
                
                
                      
            <% }); %>
                </table>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div> -->
</div>
<div class="pagination-container">
    <% if (currentPage > 1) { %>
        <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
    <% } else { %>
        <span>&laquo; Previous</span>
    <% } %>

    <% for (let i = 1; i <= totalPages; i++) { %>
        <a href="?page=<%= i %>" class="<%= currentPage === i ? 'current-page' : '' %>"><%= i %></a>
    <% } %>

    <% if (currentPage < totalPages) { %>
        <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
    <% } else { %>
        <span>Next &raquo;</span>
    <% } %>
</div>

<script>



function changeOrderStatus(orderId, newStatus,productId) {
    Swal.fire({
        title: 'Are you sure?',
        text: `Change order status to ${newStatus}?`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, change it!'
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                url: '/admin/orderList',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ orderId: orderId, newStatus: newStatus,productId: productId, }),
                success: function (data) {
                    if (data.success) {
                        
                        const statusDropdown = $(`#order-status-${orderId}`);
                        statusDropdown.val(newStatus);
                        window.location.reload()

                        if (newStatus === 'Delivered') {
                            statusDropdown.prop('disabled', true);
                        } else {
                            statusDropdown.prop('disabled', false);
                        }

                        Swal.fire('Updated!', 'Order status has been updated.', 'success');
                    } else {
                        Swal.fire('Error', data.message || 'Something went wrong.', 'error');
                    }
                },
                error: function (error) {
                    console.error('Error updating order status:', error);
                    Swal.fire('Error', 'Something went wrong.', 'error');
                }
            });
        }
    });
}


function cancelOrder(orderId) {
    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, cancel it!'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/admin/cancelOrder', {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ orderId: orderId }) 
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire('Cancelled!', 'The order has been cancelled.', 'success');
                } else {
                    Swal.fire('Error!', data.message || 'Failed to cancel the order.', 'error');
                }
            })
            .catch(error => {
                console.error('Error cancelling order:', error);
                Swal.fire('Error!', 'Something went wrong.', 'error');
            });
        }
    });
}
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js"></script>


<%- include("../../views/partials/admin/footer") %>